#!/bin/bash

#  ====================================================
#  |       Configurações Internas do LiveCD           |
#  ====================================================

# Layout padrão do teclado do LiveCD
keyboard_layout='br'
keyboard_variant='abnt2'

# Hostname do LiveCD
livecd_hostname='provas'

# Timezone padrão do LiveCD
timezone='America/Sao_Paulo'

# Locale padrão
lang='pt_BR.UTF-8'
language='pt_BR:pt:en'
lc_all='pt_BR.UTF-8'


#  ====================================================
#  |       Configurações de geração do LiveCD         |
#  ====================================================


# Controla se as mensagens produzidas pelos utilitários utilizados são exibidas na tela, ou salvas em arquivo, ou são descartadas completamente.
# A opção log_type pode ser NONE, STDOUT ou FILE
# - NONE descarta todas as mensagens geradas pelos comandos
# - STDOUT_ALL exibe as mensagens dos comandos na tela (esta opção pode produzir muitas mensagens na tela)
# - ERRORS_ONLY exibe somente as mensagens geradas em /dev/stderr, alguns utilitários emitem também avisos nessa saída (warnings).
# - FILE salva as saídas dos comandos em um arquivo no diretório logs/ ou um arquivo no /tmp se for um comando dentro do CHROOT.
# Recomenda-se a utilização da opção 'ERRORS_ONLY' no uso normal e a opção STDOUT_ALL para diagnosticar algum problema.
# Esta opção é processada pela função 'start_log()'.
#log_type='NONE'
log_type='STDOUT_ALL'
#log_type='ERRORS_ONLY'
#log_type='FILE'

# Se habilitado, cria uma conta com poder para fazer sudo su - e instala o openssh-server. Também
# adiciona o sufixo '_admin' ao nome da ISO gerada.
# Valores permitidos: yes/no
# ATENÇÃO: ESTE PARÂMETRO DEVE ESTAR COM O VALOR 'no' PARA GERAR O CD FINAL QUE SERÁ UTILIZADO PELOS USUÁRIOS FINAIS.
enable_admin_access='yes'
admin_user='provas'
admin_password='provas@2015'

# Se habilitado, adiciona as opções de envio de logs no menu de inicialização. Também adiciona o
# sufixo '_logs' ao nome da ISO gerada.
# Valores permitidos: yes/no
enable_send_logs='yes'

# Se habilitado, adiciona as opções de multiterminal no menu de inicialização.
# Valores permitidos: yes/no
enable_multiseat='yes'

# Se habilitado, adiciona as opções de teste da mídia onde o LiveCD foi gravado ao menu de inicialização.
# Valores permitidos: yes/no
enable_check_media='yes'

# Se habilitado, adiciona as opções de teste da memória do computador no menu de inicialização.
# Valores permitidos: yes/no
enable_memtest='yes'


# Se habilitado, o LiveCD será gerado com uma cópia do arquivo moodle_provas_online.conf, dessa
# forma o sistema do LiveCD utilizará ele, ao invés de obter as configurações remotamente.
# Valores permitidos: yes/no
enable_hardcoded_online_config='no'


# Codename da distribuição utilizada, no caso do Ubuntu 12.04 o codename é 'precise'
distro_codename='precise'

# Arquitetura do hardware para o qual o LiveCD será gerado, os valores suportados são 'i386' e 'amd64'.
# Estes valores foram obtidos através do comando 'dpkg-architecture -L'.
livecd_hw_arch='i386'  # 32-bit (recomendado)
#livecd_hw_arch='amd64'  # 64-bit

# Data em que o LiveCD está sendo gerado no formato AAAAMMDD, por exemplo: '20140212'
build_date="$(date +%Y%m%d)"

# Hora em que o LiveCD está sendo gerado no formato HHhMM, por exemplo: '14h21'
build_time="$(date +%Hh%M)"



##### Configurações dos nomes de diretórios e alguns arquivos utilizados na geração do LiveCD  #####
# OBS: $root_dir é recebido como primeiro parâmetro pelo script 'main.sh'

# Diretório temporário utilizado para gerar pacotes, o CHROOT do sistema e a estrutura da ISO.
working_dir="$root_dir/tmp"

# Diretório onde estão os arquivos de configuração utilizados para personalizar o LiveCD
config_dir="$root_dir/config"

# Diretório onde estão os scripts de geração do LiveCD
scripts_dir="$root_dir/scripts"

# Diretório onde a base padrão do sistema fica gravada, em formato .tar.gz
bootstrap_dir="$root_dir/bootstrap"

# Diretório onde os arquivos do menu de inicialização residem (ISOLINUX)
bootloader_dir="$root_dir/bootloader"

# Diretório onde as ISOs do LiveCD serão armazenadas
iso_dir="$root_dir/iso"

# Diretório que contêm os pacotes debian gerados
pkgs_built_dir="$root_dir/packages/built"

# Diretório que contêm os arquivos fontes dos pacotes debian
pkgs_src_dir="$root_dir/packages/src"

# Diretório que contêm os arquivos fontes e patches de pacotes de terceiros
pkgs_src_3rd_dir="$root_dir/packages/src_3rd_party"

# Diretório onde os pacotes gerados serão gravados temporariamente
pkgs_tmp_dir="$working_dir/packages"

# Diretório onde os logs serão gravados se esta opção estiver ativada no arquivo de configuração
logs_dir="$root_dir/logs"

# Diretório onde o cache do apt-get será gravado, para que sua remoção seja opcional
apt_cache_dir="$working_dir/apt_cache"

# Diretório raiz do LiveCD antes dele ser transformado em arquivo ISO
root_iso="$working_dir/root_iso"

# Diretório do sistema do LiveCD antes dele ser transformado em um arquivo SquashFS
root_fs="$working_dir/root_fs"

# Nome do diretório onde o arquivo SquashFS será gravado
squashfs_dir='casper'

# Nome do arquivo SquashFS que deve ser gerado
squashfs_file='filesystem.squashfs'




# Carrega as variáveis definidas no arquivo de configuração interno do LiveCD. O carregamento deste
# arquivo deve funcionar tanto fora, quanto dentro do CHROOT, por isso são testados caminhos diferentes.
provas_config_build="$config_dir/moodle_provas.conf"
if [ -r "$provas_config_build" ]; then
    source "$provas_config_build"
elif [ -r "$base_dir/moodle_provas.conf" ]; then
    source "$base_dir/moodle_provas.conf"
else
    echo "==> ERRO: O arquivo $provas_config_build não pôde ser lido."
fi



#####  Configurações do arquivo ISO a ser gerado  #####

# Rótulo interno que a ISO gerada terá (é visível apenas por programas que leem arquivos '.iso')
iso_label="Moodle Provas $livecd_version"

# Nome base do arquivo da ISO a ser gerada, sem a extensão. Esta é a base do nome, que pode ter os
# sufixos '_admin' e '_logs' adicionados no terceiro estágio da geração do LiveCD, caso as opções
# 'enable_admin_access' e 'enable_send_logs' estejam ativadas, respectivamente.
iso_name_base="provas-${livecd_version}-${build_date}_$livecd_hw_arch"

# Tamanho mínimo esperado que a ISO tenha, valor em Megabytes (MB).
iso_size_default='530'





#####  Pacotes que serão instalados no sistema do LiveCD  #####

## Kernel (o debootstrap não contém um kernel, por isso ele deve ser instalado explicitamente)
pkg_kernel='linux-image-generic linux-headers-generic'
#pkg_kernel='linux-image-generic-lts-quantal'
#pkg_kernel='linux-image-generic-lts-raring'
#pkg_kernel='linux-image-generic-lts-saucy'
#pkg_kernel='linux-image-generic-lts-trusty'

## Servidor gráfico - Xorg
#pkg_xserver='xinit xserver-xorg-lts-raring libgnome-desktop-3-2' #xserver-xorg'
#pkg_xserver='xinit xserver-xorg-lts-trusty libgnome-desktop-3-2' #xserver-xorg'
pkg_xserver='xinit xserver-xorg-lts-saucy libgnome-desktop-3-2 read-edid x11-xserver-utils-lts-saucy' #xserver-xorg'
#pkg_xserver='xinit libgnome-desktop-3-2 xserver-xorg'

## Utilitários e pacotes essenciais
#pkg_base='acpid network-manager network-manager-gnome patch policykit-desktop-privileges gnome-keyring libgnome-desktop-3-2 libpam-gnome-keyring libpam-ck-connector libpam-cap gxmessage casper'
pkg_base='acpid network-manager network-manager-gnome patch policykit-desktop-privileges gnome-keyring libpam-gnome-keyring libpam-ck-connector libpam-cap gxmessage casper usbutils bash-completion biosdevname dmidecode ethtool irqbalance laptop-detect lshw lsof wireless-tools ntpdate'

## Pacotes para suporte a áudio
pkg_sound='alsa-utils pulseaudio pavucontrol'

## Pacotes para reprodução de áudio e vídeo (inclui algumas dependências)
pkg_multimedia='totem gnome-icon-theme-symbolic'
#pkg_codecs='gstreamer0.10-ffmpeg gstreamer0.10-plugins-ugly'
pkg_codecs='gstreamer0.10-plugins-ugly'

## Pacotes do Ambiente Desktop
pkg_desktop='lxde lubuntu-artwork lubuntu-icon-theme dmz-cursor-theme murrine-themes gtk2-engines gtk2-engines-pixbuf desktop-file-utils lxtask'

## Programas do usuário
pkg_apps='vim leafpad firefox eog evince flashplugin-installer libnspr4 libreoffice'

## Programas auxiliares
pkg_util='curl imagemagick man p7zip-full rar unace unrar unzip zip'

## Tradução do sistema e dos programas para o português
pkg_locale='language-pack-pt-base language-pack-gnome-pt-base firefox-locale-pt libreoffice-l10n-pt-br'

pkg_python='gcc python2.7-dev python3 python3-dev python3-gi python3-setuptools'

# Todos os pacotes
pkg_all="$pkg_kernel $pkg_xserver $pkg_base $pkg_sound $pkg_desktop $pkg_apps $pkg_util $pkg_locale $pkg_multimedia $pkg_codecs $pkg_python"

# Todos os pacotes gerados para o Moodle Provas (eles não são instalados pelo apt-get)
pkg_provas='firefox-default-settings lxde-default-settings moodle-multiseat moodle-provas moodle-provas-config oracle-java7-jre lxpanel lxsession'

pkgs_to_remove='linux-headers* python2.7-dev python3-dev gcc'

#####  Configurações do menu de inicialização  #####

# Tempo limite de exibição do menu de inicialização, valor em milisegundos.
boot_timeout='100'

# Mensagem que mostra o contador regressivo, o caracter '#' é substituido automaticamente pelos segundos pelo ISOLINUX.
msg_timeout='Iniciando automaticamente em # segundo{,s}...'

# Mensagem exibida no rodapé do menu de inicialização
msg_bottom="Moodle Provas $livecd_version Build $build_date - Pressione a tecla <F1> para obter ajuda"

# Arquivo original da fonte de console utilizada no menu de inicialização, ela é instalada pelo pacote 'console-data'.
console_font='/usr/share/consolefonts/lat1-16.psf.gz'



#####  Configuração das cores das mensagens exibidas  #####

# Formato do nome das cores: Background_Foreground
# Uso: echo -e "=> ${black_white}Mensagem: ${red_white}Importante$ {c_default}Cor original"
black_white="\\033[1;37;40m"
blue_white="\\033[1;44;37m"
red_white="\\033[1;37;41m"
yellow_black="\\033[1;33;40m"
black_green="\\033[1;32;40m"
blue_yellow="\\033[1;33;44m"

# Nomes das cores utilizadas pelas funções do tipo 'msg_?'.
c_default="\\033[0m"
c_msg="$black_white"
c_attention="$blue_white"
c_warning="$yellow_black"
c_error="$red_white"
c_ok="$black_green"
c_chroot="$blue_yellow"

# Prefixos que podem ser adicionados às mensagens, para criar uma hierarquia simples de dois níveis e
# diferenciação entre as mensagens exibidas dentro e fora do CHROOT.

# Utilizado em mensagens principais, é o primeiro nível
prefix=' *'

# Utilizado nas submensagens, é o segundo nível
sub_prefix='   *'

# Utilizado pela função __msg() quando a variável $chroot estiver definida como a string 'true'.
prefix_chroot="${c_default}   ${c_chroot}* CHROOT *${c_default}  "


# Este sistema de geração de LiveCD foi homologado somente para o Ubuntu.
distro_ubuntu_name='Ubuntu'

# Lista de versões do Ubuntu para as quais este sistema de geração de LiveCD foi homologado (valores separados por espaço).
distro_ubuntu_versions='12.04'


# Variáveis utilizadas pelo script build_jre_pkg.sh
# O link da versão atual do JRE para Linux pode ser copiado do site:
# http://www.oracle.com/technetwork/java/javase/downloads/jre7-downloads-1880261.html
# Após copiar o novo link, você deve atualizar a variável 'jre_version' abaixo.
jre_url='http://download.oracle.com/otn-pub/java/jdk/7u75-b13/jre-7u75-linux-i586.tar.gz'
jre64_url='http://download.oracle.com/otn-pub/java/jdk/7u75-b13/jre-7u75-linux-x64.tar.gz'
jre_version='1.7.0_75'


# Lista de pacotes que são necessários para que todas as opções do menu de geração do LiveCD funcionem,
# algumas das opções do menu só funcionam em ambiente gráficos.
# Estas dependências são instaladas automaticamente a primeira vez que o sistema de geração do LiveCD é
# executado através do comando 'make', portanto a única dependência que deve estar previamente instalada
# é o comando 'make'.
build_dependencies="\
    build-essential \
    console-data \
    debootstrap \
    dpkg \
    dpkg-dev \
    fakeroot \
    genisoimage \
    mawk \
    network-manager \
    qemu \
    squashfs-tools \
    syslinux \
    usb-creator-gtk \
    virtualbox \
    virtualbox-dkms \
    virtualbox-qt"


# Lista de comandos bloqueados no LiveCD, o bloqueio é feito removendo o bit de execução do arquivo,
# deixando o arquivo executável apenas para o proprietário e o grupo (que é o 'root' nestes casos).
# Este é um dos últimos processos realizados dentro do CHROOT, antes da geração do SquashFS.
# OBS: a lista é formada pelo caminho completo dos executáveis separados por espaço, pode-se utilizar
# o curinga '*' para selecionar executáveis com nomes similares, como por exemplo /bin/fuser*
blocked_commands="\
    /bin/busybox \
    /bin/chvt \
    /bin/fuser* \
    /bin/loadkeys \
    /bin/login \
    /bin/dd \
    /bin/nc \
    /bin/netcat \
    /bin/ntfs* \
    /bin/openvt \
    /usr/bin/apt-* \
    /usr/bin/as \
    /usr/bin/c8* \
    /usr/bin/c9* \
    /usr/bin/cc \
    /usr/bin/c++* \
    /usr/bin/cpp* \
    /usr/bin/dpkg* \
    /usr/bin/eject \
    /usr/bin/gcc* \
    /usr/bin/mkfifo \
    /usr/bin/netkit* \
    /usr/bin/telnet*"


# Lista de scripts do casper que devem ser desativados no LiveCD, estes scripts são executados
# na inicialização do sistema e devem ser desativados pois alguns deles contêm comandos que
# conflitam com os comandos realizados pelos scripts do Moodle Provas.
# Este é um dos últimos processos realizados dentro do CHROOT, antes da geração do SquashFS.
# OBS: a lista é formada pelo caminho completo dos scripts separados por espaço, pode-se utilizar
# o curinga '*' para selecionar scripts com nomes similares. Como estes scripts fazem parte do
# 'initrd', ele é gerado novamente após esta alteração.
disabled_casper_scripts="\
    /usr/share/initramfs-tools/scripts/casper-bottom/*adduser \
    /usr/share/initramfs-tools/scripts/casper-bottom/*apt_cdrom \
    /usr/share/initramfs-tools/scripts/casper-bottom/*autologin \
    /usr/share/initramfs-tools/scripts/casper-bottom/*configure_init \
    /usr/share/initramfs-tools/scripts/casper-bottom/*disable_update_notifier \
    /usr/share/initramfs-tools/scripts/casper-bottom/*enable_apport_crashes \
    /usr/share/initramfs-tools/scripts/casper-bottom/*keyboard"

# Configurações da máquina virtual de testes, criada pelo script 'scripts/test_livecd_iso.sh'
# Nome base que a máquina virtual terá dentro do VirtualBox, o nome completo será formado pelo
# 'nome base' + uma string aleatória, para evitar conflitos com máquinas virtuais já existentes.
vm_name_base="Ubuntu Provas Teste"

# Diretório base onde a máquina virtual será salva, a máquina virtual será criada em um
# subdiretório com seu nome completo, descrito no parâmetro acima.
vm_path_base="$working_dir/test_iso_vm"

# Quantidade de memória RAM alocada
vm_ram='512'

# Quantidade de memória de vídeo alocada
vm_vram='12'

# Por padrão a interface de rede é criada no modo Bridge, então define a interface que será
# utilizada, você talvez precise alterar este parâmetro se a rede não estiver funcionando
# na máquina virtual. TODO: Tornar esta configuração automática, de acordo com a rota padrão.
vm_bridge_if='eth0'
